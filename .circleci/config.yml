version: 2.1

setup: true

orbs:
  path-filtering: circleci/path-filtering@1.0.0
  continuation: circleci/continuation@1.0.0

executors:
  base:
    docker:
      - image: cimg/base:stable
    resource_class: small

jobs:
  determine-workflow:
    executor: base
    steps:
      - checkout
      - path-filtering/set-parameters:
          # Matches any file or folder that starts with `.`
          mapping: |
            ^\..* no_workflow true
            path_a/.* path_a_workflow true
            path_b/.* path_b_workflow true
          output-path: /tmp/pipeline-parameters.json
      - run:
          name: Check if utility file was changed and stop workflow
          command: |
            # Pull parameters set in the previous step into bash
            eval $(jq -r 'to_entries | .[] | "export \(.key)=\(.value)"' /tmp/pipeline-parameters.json)

            echo "no_workflow: " $no_workflow
            echo "path_a_workflow: " $path_a_workflow

            # Continue job or halt based on parameters set above
            if [  "$no_workflow" = "true" ] && [ "$path_a_workflow" = "true" ] || [ "$path_b_workflow" = "true" ]; then
              echo "Commit has both utility and code changes, starting the next workflow"
            elif [ "$no_workflow" = "true" ]; then
              echo "Commit only has utility changes, halting workflow."
              circleci-agent step halt
            elif [ "$path_a_workflow" = "true" ] || [ "$path_b_workflow" = "true" ]; then
              echo "Commit has code changes, starting the next workflow"
            fi
      - continuation/continue:
          configuration_path: .circleci/continue_config.yml
          parameters: /tmp/pipeline-parameters.json

workflows:
  setup-workflow:
    jobs:
      - determine-workflow